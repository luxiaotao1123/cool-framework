package @{COMPANYNAME}.controller;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import @{COMPANYNAME}.entity.@{ENTITYNAME};
import @{COMPANYNAME}.service.@{ENTITYNAME}Service;
import com.core.common.Cools;
import com.core.common.R;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Arrays;

@Controller
public class @{ENTITYNAME}Controller {

    @Autowired
    private @{ENTITYNAME}Service @{SIMPLEENTITYNAME}Service;

    @RequestMapping("/@{SIMPLEENTITYNAME}")
    public String index(){
        return "@{SIMPLEENTITYNAME}/@{SIMPLEENTITYNAME}";
    }

    @RequestMapping(value = "/@{SIMPLEENTITYNAME}/{id}/auth")
    @ResponseBody
    public R get(@PathVariable("id") Long id) {
        return R.ok(@{SIMPLEENTITYNAME}Service.selectById(String.valueOf(id)));
    }

    @RequestMapping(value = "/@{SIMPLEENTITYNAME}/list/auth")
    @ResponseBody
    public R list(@RequestParam(defaultValue = "1")Integer curr,
                  @RequestParam(defaultValue = "10")Integer limit,
                  @{ENTITYNAME} @{SIMPLEENTITYNAME}){
        EntityWrapper<@{ENTITYNAME}> wrapper = new EntityWrapper<>();
        wrapper.setEntity(@{SIMPLEENTITYNAME});
        return R.ok(@{SIMPLEENTITYNAME}Service.selectPage(new Page<>(curr, limit), wrapper));
    }

    @RequestMapping(value = "/@{SIMPLEENTITYNAME}/add/auth")
    @ResponseBody
    public R add(@{ENTITYNAME} @{SIMPLEENTITYNAME}) {
        @{SIMPLEENTITYNAME}Service.insert(@{SIMPLEENTITYNAME});
        return R.ok();
    }

	@RequestMapping(value = "/@{SIMPLEENTITYNAME}/update/auth")
    @ResponseBody
    public R update(@{ENTITYNAME} @{SIMPLEENTITYNAME}){
        if (Cools.isEmpty(@{SIMPLEENTITYNAME}) || null==@{SIMPLEENTITYNAME}.getId()){
            return R.error();
        }
        @{SIMPLEENTITYNAME}Service.updateById(@{SIMPLEENTITYNAME});
        return R.ok();
    }

    @RequestMapping(value = "/@{SIMPLEENTITYNAME}/delete/auth")
    @ResponseBody
    public R delete(Integer[] ids){
        if (Cools.isEmpty(ids)){
            return R.error();
        }
        @{SIMPLEENTITYNAME}Service.deleteBatchIds(Arrays.asList(ids));
        return R.ok();
    }
}